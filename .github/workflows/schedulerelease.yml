# Create or Update a release PR every push to main
name: Schedule Releases

# update on changes to main
on:
  push:
    branches:
      - "main"
    paths-ignore:
      - 'README.md'
      - 'CHANGELOG.md'
      - 'docs'
      - 'examples'

jobs:
  # fetch the previous tag, and the next according to semver
  # (We assume patch, developers can bump to minor/major in the PR)
  fetch-tags:
    runs-on: ubuntu-latest
    outputs:
      previous-tag: ${{ steps.version.outputs.current-version }}
      next-tag: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - run: git fetch --tags origin

      - name: Get next version
        uses: reecetech/version-increment@2023.9.3
        id: version
        with:
          scheme: semver
          increment: patch

  # determine the changelog
  changelog:
    runs-on: ubuntu-latest
    outputs:
      changelog: ${{ steps.changelog.outputs.changelog }}
    steps:
      - name: "Generate release changelog"
        id: changelog
        uses: heinrichreimer/action-github-changelog-generator@v2.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          sinceTag: ${{ needs.fetch-tags.outputs.previous-tag }}
          dueTag: ${{ needs.fetch-tags.outputs.next-tag }}
          verbose: true
  
  # create the release PR
  create-or-update-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: gr2m/create-or-update-pull-request-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: Release v${{ needs.fetch-tags.outputs.next-tag }}
          body: ${{ needs.changelog.outputs.changelog }}
          branch: release/v${{ needs.fetch-tags.outputs.next-tag }}
          commit-message: bump version to v${{ needs.fetch-tags.outputs.next-tag }}
          update-pull-request-title-and-body: true
